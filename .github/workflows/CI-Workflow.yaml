name: Continuous Integration

on:
  push:
    branches:
      - main

env:
  ECR_REPO: '767397888237.dkr.ecr.us-east-1.amazonaws.com/project_repo'  # ECR repo
  APP_IMAGE_NAME: 'todo-python-app'                                              # name of App image
  DB_IMAGE_NAME: 'todo-python-db'                                                  # name of DB image

jobs:
  checkout-build-push:
    runs-on: [self-hosted]
    steps:
      
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Upgrade pip moudule version and Install Requriements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Log in to Amazon ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_REPO }}

    - name: Build and Tag App Image
      run: docker build -t ${{ env.ECR_REPO }}:${{ env.APP_IMAGE_NAME }}-${{ github.sha }} -f Dockerfile_app

    - name: Build and Tag DB Image
      run: docker build -t ${{ env.ECR_REPO }}:${{ env.DB_IMAGE_NAME }}-${{ github.sha }} -f Dockerfile_db

    - name: Push App Image to ECR
      run: docker push ${{ env.ECR_REPO }}:${{ env.APP_IMAGE_NAME }}-${{ github.sha }}

    - name: Push DB Image to ECR
      run: docker push ${{ env.ECR_REPO }}:${{ env.DB_IMAGE_NAME }}-${{ github.sha }}

    - name: Remove Local Docker Images
      run: |
        docker rmi ${{ env.ECR_REPO }}:${{ env.APP_IMAGE_NAME }}-${{ github.sha }}
        docker rmi ${{ env.ECR_REPO }}:${{ env.DB_IMAGE_NAME }}-${{ github.sha }}




